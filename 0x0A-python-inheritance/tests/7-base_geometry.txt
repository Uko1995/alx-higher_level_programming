Test module for task 7

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> base = BaseGeometry()

>>> base.integer_validator("age", 12)

>>> base.integer_validator("age", -12)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> base.integer_validator("point", "12")
Traceback (most recent call last):
...
TypeError: point must be an integer

>>> base.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> base.integer_validator("age")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> base.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> base.integer_validator("age", [3, 8])
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> base.integer_validator("age", (1,))
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> base.integer_validator("age", {2, 3})
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> base.integer_validator("age", True)

>>> base.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer
